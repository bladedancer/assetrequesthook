{
	"schemaVersion": "4",
	"info": {
		"name": "Hook - post /hook"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"request",
			"config",
			"env",
			"params"
		]
	},
	"start": "logger.1",
	"nodes": {
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "201",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"logger.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-logger/logger",
			"name": "Log Message",
			"method": "log",
			"parameters": [
				{
					"name": "message",
					"type": "jsonpath",
					"value": "$.request.body",
					"metaName": "Message",
					"metaDescription": "The log message."
				}
			],
			"outputs": {
				"next": {
					"context": "",
					"routes": [
						"condition.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Log Message"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Is SubResourceEvent",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.request.body.type",
					"metaName": "Source",
					"metaDescription": "The input to test."
				},
				{
					"name": "value",
					"type": "string",
					"value": "\"SubResourceUpdated\"",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"condition.2"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.2"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Not interested",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"condition.2": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Is Status Update",
			"method": "equals",
			"parameters": [
				{
					"name": "value",
					"type": "string",
					"value": "\"status\"",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				},
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.request.body.metadata.subresource",
					"metaName": "Source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"condition.3"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.2"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "ProvisionPayload",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.request.body.payload",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"data.spec.data.clientId = 'I should do some magic here';\\n  data.status.level = 'provisioned';\\n  data.status.reasons = [];\\n  return data;\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.resource",
					"routes": [
						"authz.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"http.3": {
			"type": "nodehandler://axway-flow/http",
			"name": "Error",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.error",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"logger.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-logger/logger",
			"name": "Log Resource",
			"method": "log",
			"parameters": [
				{
					"name": "message",
					"type": "jsonpath",
					"value": "$.resource",
					"metaName": "Message",
					"metaDescription": "The log message."
				}
			],
			"outputs": {
				"next": {
					"context": null,
					"routes": [
						"rest.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Log Message"
		},
		"rest.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "PUT Resource",
			"method": "put",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.resource",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.requestctx.resourceUrl",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.requestctx.headers",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"rest.2"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.3"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.3"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.3"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.3"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "PUT"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Request Context",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"logger.info(data.resource);\\n  return {\\n    resourceUrl: `${data.config.central.url}/apis${data.resource.metadata.selfLink}`,\\n    statusUrl: `${data.config.central.url}/apis${data.resource.metadata.selfLink}/status`,\\n    headers: {\\n      authorization: `Bearer ${data.credential}`,\\n      'content-type': 'application/json'\\n    }    \\n  };\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.requestctx",
					"routes": [
						"logger.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "PUT Status",
			"method": "put",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.resource",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.requestctx.statusUrl",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.requestctx.headers",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.3"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.3"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.3"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.3"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "PUT"
		},
		"authz.1": {
			"type": "nodehandler://axway-flow-authorization/authz",
			"name": "Get Credential",
			"method": "getCredential",
			"parameters": [
				{
					"name": "name",
					"type": "string",
					"value": "\"central\"",
					"metaName": "Name",
					"metaDescription": "The name of the configured credential to find and return."
				}
			],
			"outputs": {
				"next": {
					"context": "$.credential",
					"routes": [
						"javascript.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Get Credential"
		},
		"logger.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-logger/logger",
			"name": "Log Context",
			"method": "log",
			"parameters": [
				{
					"name": "message",
					"type": "jsonpath",
					"value": "$.requestctx",
					"metaName": "Message",
					"metaDescription": "The log message."
				}
			],
			"outputs": {
				"next": {
					"context": null,
					"routes": [
						"logger.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Log Message"
		},
		"condition.3": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Is Provisioning",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.request.body.payload.status.level"
				},
				{
					"name": "value",
					"type": "string",
					"value": "\"provisioning\""
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"javascript.1"
					],
					"context": "$.equals"
				},
				"false": {
					"routes": [
						"http.2"
					],
					"context": "$.equals"
				}
			}
		}
	}
}